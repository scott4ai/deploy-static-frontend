AWSTemplateFormatVersion: '2010-09-09'
Description: 'HITL - VPC Infrastructure Stack'

Parameters:
  Environment:
    Type: String
    Description: Environment name (dev, stage, prod)
    AllowedValues:
      - dev
      - stage
      - prod
    Default: dev

  ProjectName:
    Type: String
    Description: Project name for resource naming
    Default: hitl

  VpcCidr:
    Type: String
    Description: CIDR block for VPC
    Default: 10.10.0.0/16
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'

  AvailabilityZones:
    Type: CommaDelimitedList
    Description: List of availability zones
    Default: us-east-1a,us-east-1b

  PublicSubnetCidrs:
    Type: CommaDelimitedList
    Description: CIDR blocks for public subnets
    Default: 10.10.1.0/24,10.10.2.0/24

  EnableDnsHostnames:
    Type: String
    Description: Enable DNS hostnames in the VPC
    Default: true
    AllowedValues:
      - true
      - false

  EnableDnsSupport:
    Type: String
    Description: Enable DNS support in the VPC
    Default: true
    AllowedValues:
      - true
      - false

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Configuration
        Parameters:
          - Environment
          - ProjectName
      - Label:
          default: Network Configuration
        Parameters:
          - VpcCidr
          - AvailabilityZones
          - PublicSubnetCidrs
      - Label:
          default: DNS Configuration
        Parameters:
          - EnableDnsHostnames
          - EnableDnsSupport
    ParameterLabels:
      Environment:
        default: Environment
      ProjectName:
        default: Project Name
      VpcCidr:
        default: VPC CIDR Block
      AvailabilityZones:
        default: Availability Zones
      PublicSubnetCidrs:
        default: Public Subnet CIDR Blocks

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: !Ref EnableDnsHostnames
      EnableDnsSupport: !Ref EnableDnsSupport
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-vpc'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: ManagedBy
          Value: cloudformation
        - Key: Stack
          Value: vpc

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-igw'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet 1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PublicSubnetCidrs]
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-public-${AWS::Region}a'
        - Key: Type
          Value: public
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Public Subnet 2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PublicSubnetCidrs]
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-public-${AWS::Region}b'
        - Key: Type
          Value: public
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Public Subnet 3 (Conditional - only if 3rd AZ is provided)
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Condition: Has3AZs
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref PublicSubnetCidrs]
      AvailabilityZone: !Select [2, !Ref AvailabilityZones]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-public-${AWS::Region}c'
        - Key: Type
          Value: public
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-public-rt'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Route to Internet Gateway
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associate Route Table with Public Subnets
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: Has3AZs
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  # S3 VPC Endpoint
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      RouteTableIds:
        - !Ref PublicRouteTable
      VpcEndpointType: Gateway
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource: '*'

  # Security Group for VPC Endpoints
  VPCEndpointsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-vpc-endpoints'
      GroupDescription: Security group for VPC endpoints
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VpcCidr
          Description: HTTPS from VPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-vpc-endpoints-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Systems Manager VPC Endpoints
  SSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !If [Has3AZs, !Ref PublicSubnet3, !Ref AWS::NoValue]
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroup

  SSMMessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssmmessages'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !If [Has3AZs, !Ref PublicSubnet3, !Ref AWS::NoValue]
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroup

  EC2MessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2messages'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !If [Has3AZs, !Ref PublicSubnet3, !Ref AWS::NoValue]
      SecurityGroupIds:
        - !Ref VPCEndpointsSecurityGroup

Conditions:
  Has3AZs: !Not [!Equals [!Select [2, !Ref AvailabilityZones], '']]

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${ProjectName}-${Environment}-vpc-id'

  VpcCidrBlock:
    Description: VPC CIDR block
    Value: !GetAtt VPC.CidrBlock
    Export:
      Name: !Sub '${ProjectName}-${Environment}-vpc-cidr'

  InternetGatewayId:
    Description: Internet Gateway ID
    Value: !Ref InternetGateway
    Export:
      Name: !Sub '${ProjectName}-${Environment}-igw-id'

  PublicSubnetIds:
    Description: List of public subnet IDs
    Value: !If
      - Has3AZs
      - !Sub '${PublicSubnet1},${PublicSubnet2},${PublicSubnet3}'
      - !Sub '${PublicSubnet1},${PublicSubnet2}'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-subnet-ids'

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-subnet-1-id'

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-subnet-2-id'

  PublicSubnet3Id:
    Description: Public Subnet 3 ID
    Condition: Has3AZs
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-subnet-3-id'

  AvailabilityZones:
    Description: List of availability zones
    Value: !Join [',', !Ref AvailabilityZones]
    Export:
      Name: !Sub '${ProjectName}-${Environment}-availability-zones'

  PublicRouteTableId:
    Description: Public route table ID
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-route-table-id'

  S3EndpointId:
    Description: S3 VPC endpoint ID
    Value: !Ref S3Endpoint
    Export:
      Name: !Sub '${ProjectName}-${Environment}-s3-endpoint-id'

  VPCEndpointsSecurityGroupId:
    Description: VPC endpoints security group ID
    Value: !Ref VPCEndpointsSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-vpc-endpoints-sg-id'

  SSMEndpointId:
    Description: SSM VPC endpoint ID
    Value: !Ref SSMEndpoint
    Export:
      Name: !Sub '${ProjectName}-${Environment}-ssm-endpoint-id'

  SSMMessagesEndpointId:
    Description: SSM Messages VPC endpoint ID
    Value: !Ref SSMMessagesEndpoint
    Export:
      Name: !Sub '${ProjectName}-${Environment}-ssm-messages-endpoint-id'

  EC2MessagesEndpointId:
    Description: EC2 Messages VPC endpoint ID
    Value: !Ref EC2MessagesEndpoint
    Export:
      Name: !Sub '${ProjectName}-${Environment}-ec2-messages-endpoint-id'

  Environment:
    Description: Environment name
    Value: !Ref Environment
    Export:
      Name: !Sub '${ProjectName}-${Environment}-environment'

  ProjectName:
    Description: Project name
    Value: !Ref ProjectName
    Export:
      Name: !Sub '${ProjectName}-${Environment}-project-name'

  AwsRegion:
    Description: AWS Region
    Value: !Ref AWS::Region
    Export:
      Name: !Sub '${ProjectName}-${Environment}-aws-region'